apply plugin: 'com.android.application'
apply plugin: 'com.moowork.node'

// def ndkDir = plugins.getPlugin('com.android.library').sdkHandler.getNdkFolder()
// def ndkDir = project.plugins.findPlugin('com.android.application').getNdkFolder()
// Properties properties = new Properties()
// properties.load(project.rootProject.file('local.properties').newDataInputStream())
// def ndkDir = properties.getProperty('ndk.dir')

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'


    defaultConfig {
        applicationId "com.mafintosh.nodeonandroid"
        minSdkVersion 27
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Enabling multidex support.
        multiDexEnabled true
        dexOptions {
            javaMaxHeapSize "4G"
        }


        externalNativeBuild {
            cmake {
                // Use the following syntax when passing arguments to variables:
                // arguments "-DVAR_NAME=ARGUMENT".
                arguments "-DANDROID_TOOLCHAIN=clang",
                          "-DANDROID_STL=c++_shared"
                         // "-DANDROID_ALLOW_UNDEFINED_SYMBOLS=TRUE"
            }
        }

        /* ndk {
          moduleName = "nodeonandroid_jni"
          cppFlags.addAll([
            "-I" + file("src/main/jni").absolutePath,
            "-I" + file("src/main/jni/include").absolutePath,
            "-I" + ndkDir + "/sources/android/native_app_glue",
          ])

          stl = "gnustl_shared"
          ldFlags.add("-L" + file("src/main/jniLibs/arm64-v8a").absolutePath)
          ldFlags.add("-lnode")
          // ldFlags.add("-L" + file("src/main/jni/lib").absolutePath)
          // ldFlags.add("-lstlport_static")

          ldLibs.addAll(["log", "android", "EGL", "GLESv2"])
        } */

    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
            // version "3.7.1"
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles.add(file('../proguard.txt'))
        }
    }

    flavorDimensions 'cpuArch'
    productFlavors {
//        arm7 {
//            dimension 'cpuArch'
//            ndk {
//                abiFilter 'armeabi-v7a'
//            }
//        }
        arm8 {
            dimension 'cpuArch'
            ndk {
                abiFilters 'arm64-v8a'
            }
        }
    }

    /* externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
            // arguments "-DANDROID_TOOLCHAIN=clang", "-DANDROID_STL=c++_shared", "-DANDROID_PLATFORM=android-25"
            // cppFlags "-std=c++11"
        }
    } */
    // lintOptions {
    //     tasks.lint.enabled = false
    // }
}

//task assetsNpmInstall(type: NpmTask) {
//    workingDir = file('./src/main/assets/node/')
//    args = ['install', '--production', '--no-package-lock', '--loglevel', 'warn']
//}
//
//tasks.whenTaskAdded { task ->
//    if (task.name == 'generateArm8DebugSources' || task.name == 'generateArm8ReleaseSources') {
//        generateArm8DebugSources.dependsOn assetsNpmInstall
//    }
//}




/* repositories {
    // jcenter()
    flatDir {
      dirs 'libs'
    }
} */

dependencies {

    /*
    // Adds Google VR spatial audio support
    implementation 'com.google.vr:sdk-audio:1.150.0'

    // Required for all Google VR apps
    implementation 'com.google.vr:sdk-base:1.150.0'
    */

    // ARCore library
    implementation 'com.google.ar:core:1.4.0'
    implementation 'com.google.ar.sceneform:core:1.4.0'
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.4.0'

    // Obj - a simple Wavefront OBJ file loader
    // https://github.com/javagl/Obj
    implementation 'de.javagl:obj:0.2.1'
    implementation 'com.android.support:design:27.1.1'

    // NodeService
    implementation "com.android.support:support-core-utils:27.1.1"


    // implementation fileTree(dir: 'libs', include: ['*.jar'])
}
